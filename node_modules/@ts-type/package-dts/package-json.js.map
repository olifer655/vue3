{"version":3,"file":"package-json.js","sourceRoot":"","sources":["package-json.ts"],"names":[],"mappings":";AAAA;;GAEG;;;;;;;;;;;;;AAUH,kDAA6D;AAApD,0GAAA,iBAAiB,OAAA;AAC1B,2DAAyC","sourcesContent":["/**\n * Created by user on 2019/5/18.\n */\n\nimport type { JSONSchemaForNPMPackageJsonFiles as CoreProperties, Dependency } from './types/package.json';\nimport type { IPackageJsonDependenciesField, IDependency, IPackageJsonPublishConfig } from './lib/package-json/types';\nimport type { ILernaJson } from './lerna-json';\nimport type { ITSOverwrite } from 'ts-type/lib/type/record';\nimport { IPackageJsonExtendYarn } from './lib/package-json/yarn';\nimport { IBooleanString } from './lib/types';\nimport { ITSPartialRecord } from 'ts-type/lib/type/record/partial';\n\nexport { EnumVersionValue2 } from './lib/package-json/types';\nexport * from './lib/package-json/types';\n\nexport type ILibPackageJson = typeof import('./types/package.json');\n\n/**\n * @example IPackageJson<unknown>\n */\nexport interface IPackageJson<T = any> extends  ITSOverwrite<CoreProperties, {\n\n\t/**\n\t * yarn workspaces\n\t */\n\tworkspaces?: ILernaJson[\"packages\"];\n\n\t/**\n\t * This is a set of config values that will be used at publish-time.\n\t * It’s especially handy if you want to set the tag, registry or access,\n\t * so that you can ensure that a given package is not tagged with “latest”,\n\t * published to the global public registry or that a scoped module is private by default.\n\t *\n\t * Any config values can be overridden,\n\t * but only “tag”, “registry” and “access” probably matter for the purposes of publishing.\n\t */\n\tpublishConfig?: IPackageJsonPublishConfig;\n\n\t/**\n\t * https://github.com/bluelovers/ws-ts-type/pull/1\n\t *\n\t * If set to true, then npm will refuse to publish it.\n\t */\n\tprivate?: boolean | IBooleanString;\n\n\tgitHead?: string,\n\n\t/**\n\t * https://segmentfault.com/a/1190000016365409\n\t */\n\tunpkg?: string,\n\tbrowserslist?: string[],\n\tbrowser?: string | Record<string, string> | Record<string, boolean>,\n\tes2015?: string,\n\tesm?: boolean,\n\t'react-native'?: string,\n\tsideEffects?: boolean,\n\tsource?: string,\n\t'umd:main'?: string,\n\n}>, ITSPartialRecord<IPackageJsonDependenciesField, IDependency>, IPackageJsonExtendYarn\n{\n/*\n\t//[k in Exclude<string, keyof CoreProperties>]: T;\n\t[k: string]: unknown;\n */\n\t[k: string]: any;\n}\n\nexport default IPackageJson\n"]}