{"version":3,"file":"reactivity.global.js","sources":["../src/effect.ts","../../shared/src/index.ts","../src/reactive.ts","../src/computed.ts","../src/ref.ts"],"sourcesContent":["// effect1(()=>{\r\n//     state.name\r\n//     effect2(()=>{\r\n//         state.age;\r\n//     })\r\n//     state.address\r\n// })\r\n\r\n// // effectStack = [effect1] activeEffect = effect1\r\n// // effect1 -> name\r\n// // effect2 -> age\r\n// // effect1 -> address\r\n\r\n\r\nlet effectStack = []; // 目的就是为了能保证我们effect执行的时候 可以存储正确的关系\r\nlet activeEffect;\r\n\r\nfunction cleanupEffect(effect) {\r\n    const { deps } = effect;\r\n    for (let dep of deps) {\r\n        // set 删除effect 让属性 删除掉对应的effect   name = []\r\n        dep.delete(effect); // 让属性对应的effect移除掉，这样属性更新的时候 就不会触发这个effect重新执行了\r\n    }\r\n}\r\n// 属性变化 触发的是 dep -> effect\r\n// effect.deps = [] 和属性是没关系的\r\nexport class ReactiveEffect {\r\n    active = true; // this.active = true;\r\n    deps = []; // 让effect 记录他依赖了哪些属性 ， 同时要记录当前属性依赖了哪个effect\r\n    constructor(public fn, public scheduler?) { // this.fn = fn;\r\n\r\n    }\r\n    run() { // 调用run的时候会让fn执行\r\n        if (!this.active) { // 稍后如果非激活状态 调用run方法 默认会执行fn函数\r\n            return this.fn();\r\n        }\r\n        if (!effectStack.includes(this)) { // 屏蔽同一个effect会多次执行\r\n            try {\r\n                effectStack.push(activeEffect = this);\r\n                return this.fn(); // 取值  new Proxy 会执行get方法  (依赖收集)\r\n            } finally {\r\n                effectStack.pop(); // 删除最后一个\r\n                activeEffect = effectStack[effectStack.length - 1]\r\n            }\r\n        }\r\n    }\r\n    stop() { // 让effect 和 dep 取消关联 dep上面存储的effect移除掉即可\r\n        if (this.active) {\r\n            cleanupEffect(this)\r\n            this.active = false;\r\n        }\r\n    }\r\n}\r\n// obj name :[effect]\r\n//     age : [effect]\r\n// {对象：{属性 ： [effect,effect]}  } \r\nexport function isTracking() {\r\n    return activeEffect !== undefined\r\n}\r\nconst targetMap = new WeakMap();\r\nexport function track(target, key) { // 一个属性对应多个effect， 一个effect中依赖了多个属性 =》 多对多\r\n    // 是只要取值我就要收集吗？\r\n    if (!isTracking()) { // 如果这个属性 不依赖于effect直接跳出即可\r\n        return\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map())); // {对象：map{}}\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));// {对象：map{name:set[]}}\r\n    }\r\n    trackEffects(dep);\r\n\r\n}\r\nexport function trackEffects(dep) {\r\n    let shouldTrack = !dep.has(activeEffect); // 看一下这个属性有没有存过这个effect\r\n    if (shouldTrack) {\r\n        dep.add(activeEffect); // // {对象：map{name:set[effect,effect]}}\r\n        activeEffect.deps.push(dep); // 稍后用到\r\n    } // { 对象：{name:set,age:set}\r\n\r\n}\r\nexport function trigger(target, key) {\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) return;// 属性修改的属性 根本没有依赖任何的effect\r\n    let deps = []; // [set ,set ]\r\n    if (key !== undefined) {\r\n        deps.push(depsMap.get(key));\r\n    }\r\n    let effects = [];\r\n    for (const dep of deps) {\r\n        effects.push(...dep)\r\n    }\r\n    triggerEffects(effects);\r\n}\r\nexport function triggerEffects(dep) {\r\n    for (const effect of dep) { // 如果当前effect执行 和 要执行的effect是同一个，不要执行了 防止循环\r\n        if (effect !== activeEffect) {\r\n            if (effect.scheduler) {\r\n                return effect.scheduler()\r\n            }\r\n            effect.run(); // 执行effect\r\n        }\r\n    }\r\n}\r\nexport function effect(fn) {\r\n    const _effect = new ReactiveEffect(fn);\r\n    _effect.run(); // 会默认让fn执行一次\r\n    let runner = _effect.run.bind(_effect);\r\n    runner.effect = _effect; // 给runner添加一个effect实现 就是 effect实例\r\n    return runner;\r\n}\r\n\r\n// vue3 的响应式原理  取值时 收集对应的effect， 改值时找到对应的effect执行","export function isObject(value: unknown): value is Record<any, any> {\r\n    return typeof value === 'object' && value !== null\r\n}\r\n\r\nexport function isFunction(value):boolean{\r\n    return typeof value === 'function'\r\n}","import { isObject } from \"@vue/shared\"\r\nimport { track, trigger } from \"./effect\";\r\n\r\n\r\nconst enum ReactiveFlags {\r\n    IS_REACTIVE = '__v_isReactive'\r\n}\r\nconst mutableHandlers: ProxyHandler<Record<any, any>> = {\r\n    get(target, key, recevier) { // 代理对象的本身\r\n        if (key === ReactiveFlags.IS_REACTIVE) {\r\n            return true;\r\n        }\r\n        track(target,key);\r\n        // 这里取值了， 可以收集他在哪个effect中\r\n        const res = Reflect.get(target, key, recevier); // target[key]\r\n        return res;\r\n    },\r\n    set(target, key, value, recevier) {\r\n\r\n        let oldValue = (target as any)[key]\r\n        // 如果改变值了， 可以在这里触发effect更新\r\n        const res = Reflect.set(target, key, value, recevier); // target[key] = value\r\n\r\n        if(oldValue !== value){ // 值不发生变化 effect不需要重新执行\r\n            trigger(target,key); // 找属性对应的effect让她重新执行\r\n        }\r\n        return res;\r\n    }\r\n}\r\n// map和weakMap的区别\r\nconst reactiveMap = new WeakMap(); // weakmap 弱引用   key必须是对象，如果key没有被引用可以被自动销毁\r\n\r\nfunction createReactiveObject(target: object) { \r\n    // 先默认认为这个target已经是代理过的属性了\r\n    if ((target as any)[ReactiveFlags.IS_REACTIVE]) {\r\n        return target\r\n    }\r\n    // reactiveApi 只针对对象才可以 \r\n    if (!isObject(target)) {\r\n        return target\r\n    }\r\n    const exisitingProxy = reactiveMap.get(target); // 如果缓存中有 直接使用上次代理的结果\r\n    if (exisitingProxy) {\r\n        return exisitingProxy\r\n    }\r\n    const proxy = new Proxy(target, mutableHandlers); // 当用户获取属性 或者更改属性的时候 我能劫持到\r\n    reactiveMap.set(target, proxy); // 将原对象和生成的代理对象 做一个映射表\r\n\r\n    return proxy; // 返回代理\r\n}\r\n\r\nexport function reactive(target: object) {\r\n    return createReactiveObject(target)\r\n}\r\nexport function toReactive(value){\r\n    return isObject(value) ? reactive(value) : value\r\n}\r\n\r\n// readonly shallowReactive shallowReadnly \r\n// export function readonly(){\r\n// }\r\n// export function shallowReactive(){\r\n// }\r\n// export function shallowReadnly(){\r\n// }\r\n","import { isFunction } from \"@vue/shared\";\r\nimport { isTracking, ReactiveEffect, trackEffects, triggerEffects } from \"./effect\";\r\n\r\n\r\nclass ComputedRefImpl {\r\n    public dep; // this.dep = undefined;\r\n    public _dirty = true; // this._dirty = true;\r\n    public __v_isRef = true;\r\n    public effect; // 计算属性是依赖于effect的\r\n    public _value;\r\n    constructor(getter, public setter) { // 只有调用computed()才执行一次\r\n        // 这里将计算属性包成一个effect\r\n        // 这里 我给计算属性变成了effect ，那么计算属性中的属性会收集这个effect\r\n        this.effect = new ReactiveEffect(getter,()=>{\r\n            // 稍后计算属性依赖的值变化 不要重新执行计算属性的effect，而是调用此函数\r\n            if(!this._dirty){\r\n                this._dirty = true;\r\n                triggerEffects(this.dep )\r\n            }\r\n        });\r\n    }\r\n    get value() { // 取值时会走get方法\r\n        if (isTracking()) { // 是否是在effect中取值的\r\n            trackEffects(this.dep || (this.dep = new Set))\r\n        }\r\n        if (this._dirty) {\r\n            // 将结果缓存到this._value 这样就不用每次都run了\r\n            this._value = this.effect.run();\r\n            this._dirty = false;\r\n        }\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        this.setter(newValue); // 如果修改计算属性的值 就触发你自己的set方法\r\n    }\r\n}\r\nexport function computed(getterOrOptions) {\r\n    const onlyGetter = isFunction(getterOrOptions);\r\n    let getter;\r\n    let setter;\r\n    if (onlyGetter) {\r\n        getter = getterOrOptions;\r\n        setter = () => { }\r\n    } else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n\r\n    return new ComputedRefImpl(getter, setter)\r\n}","import { isTracking, trackEffects, triggerEffects } from \"./effect\";\r\nimport { toReactive } from \"./reactive\";\r\n\r\nclass RefImpl{\r\n    public dep;\r\n    public __v_isRef;\r\n    public _value;\r\n    constructor(public _rawValue){ // 原来的值\r\n        // _rawValue如果用户传进来的值 是一个对象 我需要将对象转化成响应式\r\n        this._value = toReactive(_rawValue)\r\n    }\r\n\r\n  \r\n    // 类的属性访问器 最终会变成deifneProperty\r\n    get value(){ // 取值的时候进行依赖收集\r\n        if(isTracking()){\r\n            trackEffects(this.dep || (this.dep = new Set()));\r\n            console.log(this.dep)\r\n        }\r\n        return this._value;\r\n    }\r\n    set value(newValue){ // 设置的时候触发更新\r\n        if(newValue !== this._rawValue){\r\n            // 先看一下之前之后是否一样\r\n            this._rawValue = newValue;\r\n            this._value =  toReactive(newValue);\r\n            triggerEffects(this.dep);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createRef(value){\r\n\r\n    return new RefImpl(value);\r\n}\r\n\r\n\r\nexport function ref(value){\r\n    return createRef(value);\r\n}\r\n\r\n// export function shallowRef(value){\r\n //   return createRef(value,true);\r\n// }\r\n\r\n// reactive readonly "],"names":[],"mappings":"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"}